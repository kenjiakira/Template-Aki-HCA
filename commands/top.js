const fs = require('fs');
const path = require('path');
const { allBalances } = require('../utils/currencies');

module.exports = {
    name: "top",
    dev: "HNT",
    info: "Xem top 10 ng∆∞·ªùi gi√†u nh·∫•t server.",
    onPrefix: true,
    usages: ".top: Xem top 10 ng∆∞·ªùi ch∆°i gi√†u nh·∫•t.",
    cooldowns: 0,

    onLaunch: async function({ api, event = [] }) {
        const { threadID, messageID, senderID } = event;

        let allBalancesData;
        try {
            allBalancesData = allBalances();
        } catch (error) {
            console.error("L·ªói khi l·∫•y d·ªØ li·ªáu s·ªë d∆∞:", error);
            return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi l·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng.", threadID, messageID);
        }

        let userData;
        try {
            const rawData = fs.readFileSync('./events/cache/userData.json');
            userData = JSON.parse(rawData);
        } catch (error) {
            console.error("L·ªói khi ƒë·ªçc userData.json:", error);
            return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi ƒë·ªçc d·ªØ li·ªáu ng∆∞·ªùi d√πng.", threadID, messageID);
        }

        const sortedBalances = Object.entries(allBalancesData)
            .sort((a, b) => b[1] - a[1])
            .slice(0, 10);

        let topMessage = "üíé ùêìùê®ùê© ùüèùüé ùêçùê†∆∞ùê®ÃõÃÄùê¢ ùêÜùê¢ùêöÃÄùêÆ ùêçùê°ùêöÃÇÃÅùê≠ ùêíùêûùê´ùêØùêûùê´\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n";

        const rankEmoji = ['üëë', 'ü•à', 'ü•â', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü'];
        let userPosition = null;

        sortedBalances.forEach((entry, index) => {
            const userID = entry[0];
            const balance = entry[1];
            const userName = userData[userID] ? userData[userID].name : "Ng∆∞·ªùi d√πng ·∫©n danh";
            const formattedBalance = balance.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

            topMessage += `${rankEmoji[index]} ${index + 1}. ${userName}\nüí∞ ${formattedBalance} Xu\n\n`;

            if (userID === senderID) {
                userPosition = index + 1;
            }
        });

        if (sortedBalances.length === 0) {
            topMessage = "‚ùå Ch∆∞a c√≥ ng∆∞·ªùi ch∆°i n√†o trong h·ªá th·ªëng.";
        }

        if (userPosition !== null) {
            topMessage += `\nüéØ V·ªã tr√≠ c·ªßa b·∫°n: #${userPosition} trong top 10 ng∆∞·ªùi gi√†u nh·∫•t!`;
        } else {
            const userBalance = allBalancesData[senderID] || 0;
            const formattedUserBalance = userBalance.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            topMessage += `\nüí´ B·∫°n kh√¥ng c√≥ trong top 10.\nüí∞ S·ªë xu hi·ªán t·∫°i: ${formattedUserBalance} Xu`;
        }

        return api.sendMessage(topMessage, threadID, messageID);
    }
};
